# Cakefile

{exec} = require "child_process"
util = require "util"
fs = require "fs"

# 設定
srcDir = "."
libDir = "."

# コンパイルするファイル群
files_group = [
    ["sketch.coffee"]
]

compile = (files) ->
    len = files.length
    fileList = []
    messages = []
    for i in [0...len]
        if i == 0
            fileName = libDir + "/" + files[i]
            fileName = fileName.replace ".coffee", ".js"
        files[i] = srcDir + "/" + files[i]
        fileList.push(files[i])
        messages.push "[#{i + 1}] #{files[i]}"
    util.log "Appending #{len} files to #{fileName}"
    for message in messages
        util.log message
    if len > 1
        command = "-cbj #{fileName} #{fileList.join " "}"
    else
        command = "-cbo #{libDir} #{files[0]}"
    util.log "Building #{fileName}"
    exec "coffee #{command}", (error, stdout, stderr) ->
        if error
            util.log error
        else
            util.log "Compiled #{fileName}"
        # util.log stdout if stdout
        # util.log stderr if stderr

task "build", "ビルドします", (options) ->
    for files in files_group
        compile files.slice()

task "watch", "ファイル更新の都度、自動でビルドします", (options) ->
    util.log "Watching for changes in #{srcDir}"
    prevTime = new Date()
    prevTime = prevTime.toLocaleTimeString()
    fs.watch srcDir, (event, fileName) ->
        currentTime = new Date()
        currentTime = currentTime.toLocaleTimeString()
        if prevTime != currentTime
            util.log "Saw change in #{srcDir}/#{fileName}"
            invoke "build"
        prevTime = new Date()
        prevTime = prevTime.toLocaleTimeString()